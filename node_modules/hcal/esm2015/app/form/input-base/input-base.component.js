/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class InputBaseComponent {
    constructor() {
        this.elementType = 'text';
        this.readonly = false;
        this.elementPlaceholder = '';
        this.enableTooltip = true;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
InputBaseComponent.decorators = [
    { type: Component, args: [{
                selector: 'hcal-input-base',
                template: `<div [class]="'form-group position-relative '+contentStyle">
  <label [attr.for]="elementId" class="control-label">{{ elementLabel }}</label>
  <input [type]="elementType" [class]="className" name="elementName" [id]="elementId" [placeholder]="elementPlaceholder" [position]="placementTooltip"
         [tooltipHcal]="textTooltip" [delay]="delay" *ngIf="enableTooltip" ngModel [required]="enableRequired">
  <input *ngIf="!enableTooltip" [type]="elementType" [class]="className" ngModel name="elementName" [id]="elementId" [placeholder]="elementPlaceholder"
         [required]="enableRequired"
         [(ngModel)]="elementNgModel">
</div>
`,
                styles: [``]
            },] },
];
/** @nocollapse */
InputBaseComponent.ctorParameters = () => [];
InputBaseComponent.propDecorators = {
    elementId: [{ type: Input }],
    elementType: [{ type: Input }],
    elementLabel: [{ type: Input }],
    readonly: [{ type: Input }],
    maxLength: [{ type: Input }],
    elementNgModel: [{ type: Input }],
    elementPlaceholder: [{ type: Input }],
    elementName: [{ type: Input }],
    className: [{ type: Input }],
    textTooltip: [{ type: Input }],
    contentStyle: [{ type: Input }],
    placementTooltip: [{ type: Input }],
    delay: [{ type: Input }],
    enableTooltip: [{ type: Input }],
    enableRequired: [{ type: Input }]
};
function InputBaseComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    InputBaseComponent.prototype.elementId;
    /** @type {?} */
    InputBaseComponent.prototype.elementType;
    /** @type {?} */
    InputBaseComponent.prototype.elementLabel;
    /** @type {?} */
    InputBaseComponent.prototype.readonly;
    /** @type {?} */
    InputBaseComponent.prototype.maxLength;
    /** @type {?} */
    InputBaseComponent.prototype.elementNgModel;
    /** @type {?} */
    InputBaseComponent.prototype.elementPlaceholder;
    /** @type {?} */
    InputBaseComponent.prototype.elementName;
    /** @type {?} */
    InputBaseComponent.prototype.className;
    /** @type {?} */
    InputBaseComponent.prototype.textTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.contentStyle;
    /** @type {?} */
    InputBaseComponent.prototype.placementTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.delay;
    /** @type {?} */
    InputBaseComponent.prototype.enableTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.enableRequired;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9oY2FsLyIsInNvdXJjZXMiOlsiYXBwL2Zvcm0vaW5wdXQtYmFzZS9pbnB1dC1iYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFlekQsTUFBTTtJQWtCSjsyQkFmdUIsTUFBTTt3QkFFVCxLQUFLO2tDQUdLLEVBQUU7NkJBT1AsSUFBSTtLQUdaOzs7O0lBRWpCLFFBQVE7S0FDUDs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUU7Ozs7Ozs7O0NBUVg7Z0JBQ0MsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2I7Ozs7O3dCQUdFLEtBQUs7MEJBQ0wsS0FBSzsyQkFDTCxLQUFLO3VCQUNMLEtBQUs7d0JBQ0wsS0FBSzs2QkFDTCxLQUFLO2lDQUNMLEtBQUs7MEJBQ0wsS0FBSzt3QkFDTCxLQUFLOzBCQUNMLEtBQUs7MkJBQ0wsS0FBSzsrQkFDTCxLQUFLO29CQUNMLEtBQUs7NEJBQ0wsS0FBSzs2QkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hjYWwtaW5wdXQtYmFzZScsXG4gIHRlbXBsYXRlOiBgPGRpdiBbY2xhc3NdPVwiJ2Zvcm0tZ3JvdXAgcG9zaXRpb24tcmVsYXRpdmUgJytjb250ZW50U3R5bGVcIj5cbiAgPGxhYmVsIFthdHRyLmZvcl09XCJlbGVtZW50SWRcIiBjbGFzcz1cImNvbnRyb2wtbGFiZWxcIj57eyBlbGVtZW50TGFiZWwgfX08L2xhYmVsPlxuICA8aW5wdXQgW3R5cGVdPVwiZWxlbWVudFR5cGVcIiBbY2xhc3NdPVwiY2xhc3NOYW1lXCIgbmFtZT1cImVsZW1lbnROYW1lXCIgW2lkXT1cImVsZW1lbnRJZFwiIFtwbGFjZWhvbGRlcl09XCJlbGVtZW50UGxhY2Vob2xkZXJcIiBbcG9zaXRpb25dPVwicGxhY2VtZW50VG9vbHRpcFwiXG4gICAgICAgICBbdG9vbHRpcEhjYWxdPVwidGV4dFRvb2x0aXBcIiBbZGVsYXldPVwiZGVsYXlcIiAqbmdJZj1cImVuYWJsZVRvb2x0aXBcIiBuZ01vZGVsIFtyZXF1aXJlZF09XCJlbmFibGVSZXF1aXJlZFwiPlxuICA8aW5wdXQgKm5nSWY9XCIhZW5hYmxlVG9vbHRpcFwiIFt0eXBlXT1cImVsZW1lbnRUeXBlXCIgW2NsYXNzXT1cImNsYXNzTmFtZVwiIG5nTW9kZWwgbmFtZT1cImVsZW1lbnROYW1lXCIgW2lkXT1cImVsZW1lbnRJZFwiIFtwbGFjZWhvbGRlcl09XCJlbGVtZW50UGxhY2Vob2xkZXJcIlxuICAgICAgICAgW3JlcXVpcmVkXT1cImVuYWJsZVJlcXVpcmVkXCJcbiAgICAgICAgIFsobmdNb2RlbCldPVwiZWxlbWVudE5nTW9kZWxcIj5cbjwvZGl2PlxuYCxcbiAgc3R5bGVzOiBbYGBdXG59KVxuZXhwb3J0IGNsYXNzIElucHV0QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgZWxlbWVudElkOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVsZW1lbnRUeXBlID0gJ3RleHQnO1xuICBASW5wdXQoKSBlbGVtZW50TGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgbWF4TGVuZ3RoOiBudW1iZXI7XG4gIEBJbnB1dCgpIGVsZW1lbnROZ01vZGVsO1xuICBASW5wdXQoKSBlbGVtZW50UGxhY2Vob2xkZXIgPSAnJztcbiAgQElucHV0KCkgZWxlbWVudE5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRleHRUb29sdGlwOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbnRlbnRTdHlsZTogc3RyaW5nO1xuICBASW5wdXQoKSBwbGFjZW1lbnRUb29sdGlwOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGRlbGF5OiBudW1iZXI7XG4gIEBJbnB1dCgpIGVuYWJsZVRvb2x0aXAgPSB0cnVlO1xuICBASW5wdXQoKSBlbmFibGVSZXF1aXJlZDtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==