/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
var InputBaseComponent = /** @class */ (function () {
    function InputBaseComponent() {
        this.elementType = 'text';
        this.readonly = false;
        this.elementPlaceholder = '';
        this.enableTooltip = true;
    }
    /**
     * @return {?}
     */
    InputBaseComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    InputBaseComponent.decorators = [
        { type: Component, args: [{
                    selector: 'hcal-input-base',
                    template: "<div [class]=\"'form-group position-relative '+contentStyle\">\n  <label [attr.for]=\"elementId\" class=\"control-label\">{{ elementLabel }}</label>\n  <input [type]=\"elementType\" [class]=\"className\" name=\"elementName\" [id]=\"elementId\" [placeholder]=\"elementPlaceholder\" [position]=\"placementTooltip\"\n         [tooltipHcal]=\"textTooltip\" [delay]=\"delay\" *ngIf=\"enableTooltip\" ngModel [required]=\"enableRequired\">\n  <input *ngIf=\"!enableTooltip\" [type]=\"elementType\" [class]=\"className\" ngModel name=\"elementName\" [id]=\"elementId\" [placeholder]=\"elementPlaceholder\"\n         [required]=\"enableRequired\"\n         [(ngModel)]=\"elementNgModel\">\n</div>\n",
                    styles: [""]
                },] },
    ];
    /** @nocollapse */
    InputBaseComponent.ctorParameters = function () { return []; };
    InputBaseComponent.propDecorators = {
        elementId: [{ type: Input }],
        elementType: [{ type: Input }],
        elementLabel: [{ type: Input }],
        readonly: [{ type: Input }],
        maxLength: [{ type: Input }],
        elementNgModel: [{ type: Input }],
        elementPlaceholder: [{ type: Input }],
        elementName: [{ type: Input }],
        className: [{ type: Input }],
        textTooltip: [{ type: Input }],
        contentStyle: [{ type: Input }],
        placementTooltip: [{ type: Input }],
        delay: [{ type: Input }],
        enableTooltip: [{ type: Input }],
        enableRequired: [{ type: Input }]
    };
    return InputBaseComponent;
}());
export { InputBaseComponent };
function InputBaseComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    InputBaseComponent.prototype.elementId;
    /** @type {?} */
    InputBaseComponent.prototype.elementType;
    /** @type {?} */
    InputBaseComponent.prototype.elementLabel;
    /** @type {?} */
    InputBaseComponent.prototype.readonly;
    /** @type {?} */
    InputBaseComponent.prototype.maxLength;
    /** @type {?} */
    InputBaseComponent.prototype.elementNgModel;
    /** @type {?} */
    InputBaseComponent.prototype.elementPlaceholder;
    /** @type {?} */
    InputBaseComponent.prototype.elementName;
    /** @type {?} */
    InputBaseComponent.prototype.className;
    /** @type {?} */
    InputBaseComponent.prototype.textTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.contentStyle;
    /** @type {?} */
    InputBaseComponent.prototype.placementTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.delay;
    /** @type {?} */
    InputBaseComponent.prototype.enableTooltip;
    /** @type {?} */
    InputBaseComponent.prototype.enableRequired;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9oY2FsLyIsInNvdXJjZXMiOlsiYXBwL2Zvcm0vaW5wdXQtYmFzZS9pbnB1dC1iYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7O0lBaUN2RDsyQkFmdUIsTUFBTTt3QkFFVCxLQUFLO2tDQUdLLEVBQUU7NkJBT1AsSUFBSTtLQUdaOzs7O0lBRWpCLHFDQUFROzs7SUFBUjtLQUNDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSxvckJBUVg7b0JBQ0MsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO2lCQUNiOzs7Ozs0QkFHRSxLQUFLOzhCQUNMLEtBQUs7K0JBQ0wsS0FBSzsyQkFDTCxLQUFLOzRCQUNMLEtBQUs7aUNBQ0wsS0FBSztxQ0FDTCxLQUFLOzhCQUNMLEtBQUs7NEJBQ0wsS0FBSzs4QkFDTCxLQUFLOytCQUNMLEtBQUs7bUNBQ0wsS0FBSzt3QkFDTCxLQUFLO2dDQUNMLEtBQUs7aUNBQ0wsS0FBSzs7NkJBL0JSOztTQWVhLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdoY2FsLWlucHV0LWJhc2UnLFxuICB0ZW1wbGF0ZTogYDxkaXYgW2NsYXNzXT1cIidmb3JtLWdyb3VwIHBvc2l0aW9uLXJlbGF0aXZlICcrY29udGVudFN0eWxlXCI+XG4gIDxsYWJlbCBbYXR0ci5mb3JdPVwiZWxlbWVudElkXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCI+e3sgZWxlbWVudExhYmVsIH19PC9sYWJlbD5cbiAgPGlucHV0IFt0eXBlXT1cImVsZW1lbnRUeXBlXCIgW2NsYXNzXT1cImNsYXNzTmFtZVwiIG5hbWU9XCJlbGVtZW50TmFtZVwiIFtpZF09XCJlbGVtZW50SWRcIiBbcGxhY2Vob2xkZXJdPVwiZWxlbWVudFBsYWNlaG9sZGVyXCIgW3Bvc2l0aW9uXT1cInBsYWNlbWVudFRvb2x0aXBcIlxuICAgICAgICAgW3Rvb2x0aXBIY2FsXT1cInRleHRUb29sdGlwXCIgW2RlbGF5XT1cImRlbGF5XCIgKm5nSWY9XCJlbmFibGVUb29sdGlwXCIgbmdNb2RlbCBbcmVxdWlyZWRdPVwiZW5hYmxlUmVxdWlyZWRcIj5cbiAgPGlucHV0ICpuZ0lmPVwiIWVuYWJsZVRvb2x0aXBcIiBbdHlwZV09XCJlbGVtZW50VHlwZVwiIFtjbGFzc109XCJjbGFzc05hbWVcIiBuZ01vZGVsIG5hbWU9XCJlbGVtZW50TmFtZVwiIFtpZF09XCJlbGVtZW50SWRcIiBbcGxhY2Vob2xkZXJdPVwiZWxlbWVudFBsYWNlaG9sZGVyXCJcbiAgICAgICAgIFtyZXF1aXJlZF09XCJlbmFibGVSZXF1aXJlZFwiXG4gICAgICAgICBbKG5nTW9kZWwpXT1cImVsZW1lbnROZ01vZGVsXCI+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2BgXVxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIGVsZW1lbnRJZDogc3RyaW5nO1xuICBASW5wdXQoKSBlbGVtZW50VHlwZSA9ICd0ZXh0JztcbiAgQElucHV0KCkgZWxlbWVudExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHJlYWRvbmx5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIG1heExlbmd0aDogbnVtYmVyO1xuICBASW5wdXQoKSBlbGVtZW50TmdNb2RlbDtcbiAgQElucHV0KCkgZWxlbWVudFBsYWNlaG9sZGVyID0gJyc7XG4gIEBJbnB1dCgpIGVsZW1lbnROYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSB0ZXh0VG9vbHRpcDogc3RyaW5nO1xuICBASW5wdXQoKSBjb250ZW50U3R5bGU6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2VtZW50VG9vbHRpcDogc3RyaW5nO1xuICBASW5wdXQoKSBkZWxheTogbnVtYmVyO1xuICBASW5wdXQoKSBlbmFibGVUb29sdGlwID0gdHJ1ZTtcbiAgQElucHV0KCkgZW5hYmxlUmVxdWlyZWQ7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=